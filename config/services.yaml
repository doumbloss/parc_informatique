 # config/services.yaml
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Configuration de l'ancien service HistoriqueLoggerService
    #

    App\EventSubscriber\PanneSubscriber:
        tags:
            - { name: doctrine.event_subscriber }
            
    # Configuration du listener UserListener
    App\EventListener\UserListener:
        tags:
            - { name: doctrine.event_subscriber }
    # Configuration spécifique du LoggerService
    App\Service\LoggerService:
        arguments:
            $logger: '@logger'
            $security: '@security.helper'
            $requestStack: '@request_stack'
            $entityManager: '@doctrine.orm.entity_manager'
            # Retirez $serializer si plus utilisé

    # Service pour reCAPTCHA
    ReCaptcha\ReCaptcha:
        arguments:
            $secret: '%env(RECAPTCHA_SECRET)%'
        
    # Commande pour nettoyer les anciens logs
    App\Command\CleanLogsCommand:
        arguments:
            $loggerService: '@App\Service\LoggerService'
        tags:
            - { name: console.command }

    # EventSubscriber commenté
    App\EventSubscriber\HistoriqueSubscriber:
        arguments:
            $security: '@security.helper'
        tags:
            - { name: doctrine.event_subscriber }

    App\Service\NotificationService:
        # Supprimez les arguments ici, laissez autowire les gérer
        tags: []

    App\Twig\NotificationExtension:
        arguments:
            $notificationService: '@App\Service\NotificationService'
        tags: ['twig.extension']

    App\Twig\AppExtension:
        tags: ['twig.extension']

    App\EventListener\AuditLogListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }

    App\EventListener\EquipementListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }